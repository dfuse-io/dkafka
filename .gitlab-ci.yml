cache:
  paths:
    - /apt-cache
    - /go/src/github.com
    - /go/src/golang.org
    - /go/src/google.golang.org
    - /go/src/gopkg.in

stages:
  - test
  - build
  - image

.golang_based:
  tags:
    - docker
  image: golang:1.17

unit-tests:
  extends:
    - .golang_based
  stage: test
  script:
    - make test

# race-detector:
#   extends:
#     - .golang_based
#   stage: test
#   script:
#     - make race

# memory-sanitizer:
#   extends:
#     - .golang_based
#   stage: test
#   script:
#     - make msan

code-coverage:
  extends:
    - .golang_based
  stage: test
  script:
    - make cov

code-coverage-report:
  extends:
    - .golang_based
  stage: test
  script:
    - make covhtml
  rules:
  - if: '$CI_COMMIT_BRANCH == "main"'

# lint_code:
#   extends:
#     - .golang_based
#   stage: test
#   script:
#     - make lint

build:
  extends:
    - .golang_based
  stage: build
  script:
    - make
  artifacts:
    paths:
    - dkafka

build-publish-docker:
  tags:
    - docker
  stage: image
  variables:
    VERSION: "${CI_COMMIT_SHORT_SHA}"
  image: docker:git
  services:
    - docker:19.03.12-dind
  rules:
    - if: $CI_COMMIT_TAG
      variables:
        VERSION: "${CI_COMMIT_TAG}"
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_BRANCH == "develop"'
    - if: $CI_COMMIT_TAG
  script:
    - docker login "quay.io" --username "${QUAY_USERNAME}" --password "${QUAY_PASSWORD}"
    - docker build --no-cache --tag "quay.io/ultraio/dkafka:${VERSION}" .
    - docker push "quay.io/ultraio/dkafka:${VERSION}"
    - docker tag "quay.io/ultraio/dkafka:${VERSION}" "quay.io/ultraio/dkafka:latest"
    - docker push "quay.io/ultraio/dkafka:latest"
